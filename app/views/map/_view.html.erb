<%= GMap.header %>  

<% spots, map = get_map_data(@spots) %>
<%
unless spots.empty?
  map.center_zoom_init(spots[-1].geolocation, 14)  # zoom to last spot
  
  markers = []
  spots.each do |spot|
  
    info_lines = []
    info_lines << "<strong>%s</strong><br/><span class=\"small\">%s</span><br/>current: %s<br/>here: %s<br/>%s" %
     [format_spot(spot),
      spot.address,
      spot.current_owner ? format_user(spot.current_owner) : "no one",
      spot.claims.collect{|c| format_user(c.user) }.uniq.join(", "),
      link_to("Tag on flickr", "http://flickr.com/photos/tags/#{spot.name}")
    ]
    
    if not spot.tupalo_link.empty?
      info_lines << link_to("Spot on Tupalo", spot.tupalo_link)
    end
  
    markers << GMarker.new(spot.geolocation,
      :title => spot.name, :info_window => info_lines.join("<br/>"))  
    
    if spot.current_owner
      #radius around spots
      map.overlay_init(GPolygon.new(circle_points(spot.geolocation_x, spot.geolocation_y, 0.002), spot.current_owner.colour_1, 0, 0.5, spot.current_owner.colour_1, 0.5))
    end
    
    if params[:focus] and params[:focus] == spot.name
      map.center_zoom_init(spot.geolocation, 15)
    end
  end
  
  managed_markers= ManagedMarker.new(markers,10)

  mm = GMarkerManager.new(map,:managed_markers => [managed_markers])
  map.declare_init(mm,"mgr")  
end
%>
<%= map.div(:width => 550, :height => 400) %>
<%= map.to_html %>